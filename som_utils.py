import os
import pickle

import numpy as np

from neural_networks.som.som_opt import create_som, train_som

def normalize_data(data):
    return (data - np.min(data)) / (np.max(data) - np.min(data))


def som_train_save_load(model_name, X, som_shape, sigma, lr, iterations):
    if os.path.exists(model_name):
        with open(model_name, 'rb') as infile:
            som = pickle.load(infile)
    else:
        som = create_som(X, som_shape, sigma, lr)
        som = train_som(som, X, iterations)
        # saving the som in the file som.p
        with open(model_name, 'wb') as outfile:
            pickle.dump(som, outfile)

    return som
